version: '3.8'

services:
  # MySQL Database
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: productdb
      MYSQL_USER: root
      MYSQL_PASSWORD: admin123
      MYSQL_ROOT_HOST: '%'  # Permite conexiones root desde cualquier host
      TZ: 'America/Lima'    # Zona horaria
    ports:
      - "3307:3306"  # Mapeamos el puerto 3306 interno al 3307 externo para evitar conflictos
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d  # Para scripts SQL iniciales
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uuser", "-ppassword"]
      timeout: 10s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
    restart: unless-stopped

  # Spring Boot API (Products)
  products-api:
    build:
      context: ./backend/products
      dockerfile: Dockerfile
    container_name: products-api
    depends_on:
      mysql-db:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SERVER_PORT: 8081
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/productdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: 'false'
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      TZ: 'America/Lima'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 768M
    restart: unless-stopped

  # Spring Boot API (Categories)
  categories-api:
    build:
      context: ./backend/categories
      dockerfile: Dockerfile
    container_name: categories-api
    depends_on:
      mysql-db:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SERVER_PORT: 8082
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/productdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: 'false'
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      TZ: 'America/Lima'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 768M
    restart: unless-stopped

  # Angular Frontend
  frontend:
    build:
      context: ./frontend/system
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: frontend
    ports:
      - "4200:80"
    depends_on:
      products-api:
        condition: service_healthy
      categories-api:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - TZ=America/Lima
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
    restart: unless-stopped

# Volumes for persistent data
volumes:
  mysql_data:

# Network for all services
networks:
  app-network:
    driver: bridge
